CREATE TABLE APPLICATION_USER 
(
   APPLICATION_USER_ID  VARCHAR2(30)         NOT NULL,
   APPLICATION_USER_NM  VARCHAR2(100),
   APPLICATION_USER_TYPE_CD VARCHAR2(20),
   CREATE_ID            VARCHAR2(30)         DEFAULT USER NOT NULL,
   CREATE_TS            TIMESTAMP(6)         DEFAULT SYSDATE NOT NULL,
   UPDATE_ID            VARCHAR2(30),
   UPDATE_TS            TIMESTAMP(6),
   CONSTRAINT APPLICATION_USER_PK PRIMARY KEY (APPLICATION_USER_ID)
);

CREATE TABLE CALCULATION_ENGINE 
(
   CALCULATION_ENGINE_CD VARCHAR2(20)         NOT NULL,
   CALCULATION_ENGINE_NM VARCHAR2(50),
   CALCULATION_ENGINE_TYPE_CD VARCHAR2(20)        
      CONSTRAINT CKC_CALCULATION_ENGIN_CALCULAT CHECK (CALCULATION_ENGINE_TYPE_CD IS NULL OR (CALCULATION_ENGINE_TYPE_CD IN ('INCOME','YIELD'))),
   CREATE_ID            VARCHAR2(30)         DEFAULT USER NOT NULL,
   CREATE_TS            TIMESTAMP(6)         DEFAULT SYSDATE NOT NULL,
   UPDATE_ID            VARCHAR2(30),
   UPDATE_TS            TIMESTAMP(6),
   CONSTRAINT CALCULATION_ENGINE_PK PRIMARY KEY (CALCULATION_ENGINE_CD)
);

CREATE TABLE CALENDAR_DATE 
(
   CALENDAR_DT          DATE                 NOT NULL,
   PRIOR_DAY_DT         DATE,
   NEXT_DAY_DT          DATE,
   MONTH_END_IND        VARCHAR2(1)         
      CONSTRAINT CKC_MONTH_END_IND_CALENDAR CHECK (MONTH_END_IND IS NULL OR (MONTH_END_IND IN ('Y','N'))),
   DAYS_IN_YEAR_NBR     NUMBER(3),
   CREATE_ID            VARCHAR2(30)         DEFAULT USER NOT NULL,
   CREATE_TS            TIMESTAMP(6)         DEFAULT SYSDATE NOT NULL,
   UPDATE_ID            VARCHAR2(30),
   UPDATE_TS            TIMESTAMP(6),
   CONSTRAINT PK_CALENDAR_DATE PRIMARY KEY (CALENDAR_DT)
);

CREATE TABLE GENERAL_LEGDER_ACCOUNT 
(
   GL_ACCOUNT_SID       INTEGER              NOT NULL,
   GL_ACCOUNT_NBR       VARCHAR2(20)         NOT NULL,
   GL_ACCOUNT_DSC       VARCHAR2(255),
   PRIME_GL_ACCOUNT_NBR VARCHAR2(20),
   GL_ACCOUNT_PORTF_LEVEL_IND VARCHAR2(1)         
      CONSTRAINT CKC_GL_ACCOUNT_PORTF__GENERAL_ CHECK (GL_ACCOUNT_PORTF_LEVEL_IND IS NULL OR (GL_ACCOUNT_PORTF_LEVEL_IND IN ('Y','N'))),
   GL_ACCOUNT_CLASS_LEVEL_IND VARCHAR2(1)         
      CONSTRAINT CKC_GL_ACCOUNT_CLASS__GENERAL_ CHECK (GL_ACCOUNT_CLASS_LEVEL_IND IS NULL OR (GL_ACCOUNT_CLASS_LEVEL_IND IN ('Y','N'))),
   GL_INCLUDE_IN_PORTF_CALC_IND VARCHAR2(1)         
      CONSTRAINT CKC_GL_INCLUDE_IN_POR_GENERAL_ CHECK (GL_INCLUDE_IN_PORTF_CALC_IND IS NULL OR (GL_INCLUDE_IN_PORTF_CALC_IND IN ('Y','N'))),
   GL_INCLUDE_IN_CLASS_CALC_IND VARCHAR2(1)         
      CONSTRAINT CKC_GL_INCLUDE_IN_CLA_GENERAL_ CHECK (GL_INCLUDE_IN_CLASS_CALC_IND IS NULL OR (GL_INCLUDE_IN_CLASS_CALC_IND IN ('Y','N'))),
   GL_DEBIT_CD          VARCHAR2(12),
   EFFECTIVE_DT         DATE                 NOT NULL,
   EXPIRATION_DT        DATE                 DEFAULT TO_DATE('12/31/9999','MM/DD/YYYY') NOT NULL,
   HASH_KEY_TXT         VARCHAR2(500)        NOT NULL,
   CREATE_ID            VARCHAR2(30)         DEFAULT USER NOT NULL,
   CREATE_TS            TIMESTAMP(6)         DEFAULT SYSDATE NOT NULL,
   UPDATE_ID            VARCHAR2(30),
   UPDATE_TS            TIMESTAMP(6),
   CONSTRAINT GENERAL_LEGDER_ACCOUNT_PK PRIMARY KEY (GL_ACCOUNT_SID),
   CONSTRAINT GENERAL_LEGDER_ACCOUNT_AK UNIQUE (GL_ACCOUNT_NBR)
);

CREATE TABLE INSTRUMENT 
(
   INSTRUMENT_SID       INTEGER              NOT NULL,
   INSTRUMENT_ID        INTEGER              NOT NULL,
   INSTRUMENT_SHORT_NM  VARCHAR2(255),
   INSTRUMENT_TYPE_CD   VARCHAR2(12),
   COUPON_RATE_TYPE_CD  VARCHAR2(12),
   CUSIP                VARCHAR2(30),
   PRE_REFUNDED_DT      DATE,
   DIVIDEND_PAYMENT_FREQUENCY_NBR NUMBER(38,3),
   FDR_EQUITY_IND       VARCHAR2(1)         
      CONSTRAINT CKC_FDR_EQUITY_IND_INSTRUME CHECK (FDR_EQUITY_IND IS NULL OR (FDR_EQUITY_IND IN ('Y','N'))),
   ORIGINAL_ISSUE_PRC   NUMBER(38,9),
   FDR_STEP_BOND_IND    VARCHAR2(1),
   DER_INSTRUMENT_CLASS_NM VARCHAR2(100),
   PROSPECTIVE_YIELD_METHOD_CD VARCHAR2(10),
   FINAL_MATURITY_DT    DATE,
   HYBRID_CALCULATION_CD VARCHAR2(12),
   ORIGINAL_ISSUE_DT    DATE,
   MATURITY_PRC         NUMBER(38,8),
   DEFAULT_IND          VARCHAR2(1)         
      CONSTRAINT CKC_DEFAULT_IND_INSTRUME CHECK (DEFAULT_IND IS NULL OR (DEFAULT_IND IN ('Y','N'))),
   EFFECTIVE_DT         DATE                 NOT NULL,
   EXPIRATION_DT        DATE                 DEFAULT TO_DATE('12/31/9999','MM/DD/YYYY') NOT NULL,
   HASH_KEY_TXT         VARCHAR2(500)        NOT NULL,
   DER_FOF_SECURITY_CD  VARCHAR2(12),
   PARTNERSHIP_TYPE_CD  VARCHAR2(50),
   INCOME_TRUST_TYPE_CD VARCHAR2(50),
   TAX_EXCL_LOC_CD      VARCHAR2(12),
   CREATE_ID            VARCHAR2(30)         DEFAULT USER NOT NULL,
   CREATE_TS            TIMESTAMP(6)         DEFAULT SYSDATE NOT NULL,
   UPDATE_ID            VARCHAR2(30),
   UPDATE_TS            TIMESTAMP(6),
   CONSTRAINT INSTRUMENT_PK PRIMARY KEY (INSTRUMENT_SID),
   CONSTRAINT INSTRUMENT_AK UNIQUE (INSTRUMENT_ID, EFFECTIVE_DT)
);

CREATE INDEX INSTRUMENT_IX1 ON INSTRUMENT (
   EXPIRATION_DT ASC
);

CREATE INDEX INSTRUMENT_IX2 ON INSTRUMENT (
   CUSIP ASC
);

CREATE INDEX INSTRUMENT_IX3 ON INSTRUMENT (
   INSTRUMENT_TYPE_CD ASC
);

CREATE TABLE PORTFOLIO 
(
   PORTFOLIO_SID        INTEGER              NOT NULL,
   PORTFOLIO_ID         NUMBER(20)           NOT NULL,
   PORTFOLIO_SHORT_NM   VARCHAR2(30)         NOT NULL,
   PORTFOLIO_NM         VARCHAR2(50),
   FDR_DISTRIBUTION_ELIGIBLE_IND VARCHAR2(1)         
      CONSTRAINT CKC_FDR_DISTRIBUTION__PORTFOLI CHECK (FDR_DISTRIBUTION_ELIGIBLE_IND IS NULL OR (FDR_DISTRIBUTION_ELIGIBLE_IND IN ('Y','N'))),
   FDR_PORTFOLIO_TYPE_CD VARCHAR2(50),
   EFFECTIVE_DT         DATE                 NOT NULL,
   EXPIRATION_DT        DATE                 DEFAULT TO_DATE('12/31/9999','MM/DD/YYYY') NOT NULL,
   HASH_KEY_TXT         VARCHAR2(500)        NOT NULL,
   CUSIP                VARCHAR2(30),
   FRIDAY_FORWARD_IND   VARCHAR2(1),
   PORTFOLIO_STATUS_IND VARCHAR2(1),
   ACCOUNTING_PORTFOLIO_GROUP_CD VARCHAR2(10),
   FUND_OF_FUND_IND     VARCHAR2(1)         
      CONSTRAINT CKC_FUND_OF_FUND_IND_PORTFOLI CHECK (FUND_OF_FUND_IND IS NULL OR (FUND_OF_FUND_IND IN ('Y','N'))),
   FIRS_PORTFOLIO_GROUP_CD VARCHAR2(10),
   CALCULATE_SEC_YIELD_IND VARCHAR2(1)         
      CONSTRAINT CKC_CALCULATE_SEC_YIE_PORTFOLI CHECK (CALCULATE_SEC_YIELD_IND IS NULL OR (CALCULATE_SEC_YIELD_IND IN ('Y','N'))),
   CALCULATE_MILRATE_IND VARCHAR2(1)         
      CONSTRAINT CKC_CALCULATE_MILRATE_PORTFOLI CHECK (CALCULATE_MILRATE_IND IS NULL OR (CALCULATE_MILRATE_IND IN ('Y','N'))),
   FISCAL_YEAR_END_DT   DATE,
   CREATE_ID            VARCHAR2(30)         DEFAULT USER NOT NULL,
   CREATE_TS            TIMESTAMP(6)         DEFAULT SYSDATE NOT NULL,
   UPDATE_ID            VARCHAR2(30),
   UPDATE_TS            TIMESTAMP(6),
   CONSTRAINT PORTFOLIO_PK PRIMARY KEY (PORTFOLIO_SID),
   CONSTRAINT PORTFOLIO_AK UNIQUE (PORTFOLIO_ID, EFFECTIVE_DT)
);

CREATE INDEX PORTFOLIO_IX1 ON PORTFOLIO (
   EXPIRATION_DT ASC
);

CREATE TABLE PROCESSING_EVENT 
(
   EVENT_CD             VARCHAR2(20)         NOT NULL,
   EVENT_DSC            VARCHAR2(255),
   EVENT_TYPE_CD        VARCHAR2(20),
   CREATE_ID            VARCHAR2(30)         DEFAULT USER NOT NULL,
   CREATE_TS            TIMESTAMP(6)         DEFAULT SYSDATE NOT NULL,
   UPDATE_ID            VARCHAR2(30),
   UPDATE_TS            TIMESTAMP(6),
   CONSTRAINT PROCESSING_EVENT_PK PRIMARY KEY (EVENT_CD)
);

CREATE TABLE PROCESSING_REQUEST_TYPE 
(
   REQUEST_TYPE_CD      VARCHAR2(30)         NOT NULL,
   REQUEST_TYPE_DSC     VARCHAR2(255),
   CREATE_ID            VARCHAR2(30)         DEFAULT USER NOT NULL,
   CREATE_TS            TIMESTAMP(6)         DEFAULT SYSDATE NOT NULL,
   UPDATE_ID            VARCHAR2(30),
   UPDATE_TS            TIMESTAMP(6),
   CONSTRAINT PROCESSING_REQUEST_TYPE_PK PRIMARY KEY (REQUEST_TYPE_CD)
);

CREATE TABLE USER_ROLE 
(
   APPLICATION_USER_ROLE_CD VARCHAR2(20)         NOT NULL,
   APPLICATION_USER_ROLE_DSC VARCHAR2(255),
   CREATE_ID            VARCHAR2(30)         DEFAULT USER NOT NULL,
   CREATE_TS            TIMESTAMP(6)         DEFAULT SYSDATE NOT NULL,
   UPDATE_ID            VARCHAR2(30),
   UPDATE_TS            TIMESTAMP(6),
   CONSTRAINT USER_ROLE_PK PRIMARY KEY (APPLICATION_USER_ROLE_CD)
);

CREATE TABLE "WARNING" 
(
   WARNING_CD           VARCHAR2(20)         NOT NULL,
   WARNING_DESC_TXT     VARCHAR2(1000),
   CREATE_ID            VARCHAR2(30)         DEFAULT USER NOT NULL,
   CREATE_TS            TIMESTAMP(6)         DEFAULT SYSDATE NOT NULL,
   UPDATE_ID            VARCHAR2(30),
   UPDATE_TS            TIMESTAMP(6),
   CONSTRAINT WARNING_PK PRIMARY KEY (WARNING_CD)
);


CREATE TABLE APPLICATION_USER_ROLE 
(
   APPLICATION_USER_ID  VARCHAR2(30)         NOT NULL,
   APPLICATION_USER_ROLE_CD VARCHAR2(20)         NOT NULL,
   APPLICATION_USER_ROLE_EFF_DT DATE                 NOT NULL,
   CREATE_ID            VARCHAR2(30)         DEFAULT USER NOT NULL,
   CREATE_TS            TIMESTAMP(6)         DEFAULT SYSDATE NOT NULL,
   UPDATE_ID            VARCHAR2(30),
   UPDATE_TS            TIMESTAMP(6),
   CONSTRAINT APPLICATION_USER_ROLE_PK PRIMARY KEY (APPLICATION_USER_ID, APPLICATION_USER_ROLE_CD, APPLICATION_USER_ROLE_EFF_DT)
);

CREATE INDEX APPLICATION_USER_ROLE_FK1 ON APPLICATION_USER_ROLE (
   APPLICATION_USER_ID ASC
);

CREATE INDEX APPLICATION_USER_ROLE_FK2 ON APPLICATION_USER_ROLE (
   APPLICATION_USER_ROLE_CD ASC
);

CREATE TABLE CALL_SCHEDULE 
(
   CALL_SCHEDULE_SID    INTEGER              NOT NULL,
   INSTRUMENT_SID       INTEGER              NOT NULL,
   CALL_PROVISION_TYPE_CD VARCHAR2(12)         NOT NULL,
   CALL_DT              DATE                 NOT NULL,
   CALL_PRC             NUMBER(38,9),
   EFFECTIVE_DT         DATE                 NOT NULL,
   EXPIRATION_DT        DATE                 DEFAULT TO_DATE('12/31/9999','MM/DD/YYYY') NOT NULL,
   HASH_KEY_TXT         VARCHAR2(500)        NOT NULL,
   CREATE_ID            VARCHAR2(30)         DEFAULT USER NOT NULL,
   CREATE_TS            TIMESTAMP(6)         DEFAULT SYSDATE NOT NULL,
   UPDATE_ID            VARCHAR2(30),
   UPDATE_TS            TIMESTAMP(6),
   CONSTRAINT CALL_SCHEDULE_PK PRIMARY KEY (CALL_SCHEDULE_SID),
   CONSTRAINT CALL_SCHEDULE_AK UNIQUE (INSTRUMENT_SID, CALL_PROVISION_TYPE_CD, CALL_DT, EFFECTIVE_DT)
);

CREATE INDEX CALL_SCHEDULE_FK1 ON CALL_SCHEDULE (
   INSTRUMENT_SID ASC
);

CREATE INDEX CALL_SCHEDULE_IX1 ON CALL_SCHEDULE (
   EXPIRATION_DT ASC
);

CREATE TABLE CASH_DIVIDEND_SCHEDULE 
(
   INSTRUMENT_SID       INTEGER              NOT NULL,
   DIVIDEND_TYPE_CD     VARCHAR2(12)         NOT NULL,
   DIVIDEND_SUBTYPE_CD  VARCHAR2(12)         NOT NULL,
   CURRENCY_CD          VARCHAR2(12)         NOT NULL,
   EX_DIVIDEND_DT       DATE                 NOT NULL,
   NET_PAYMNT_AMT       NUMBER,
   EFFECTIVE_DT         DATE                 NOT NULL,
   EXPIRATION_DT        DATE                 DEFAULT TO_DATE('12/31/9999','MM/DD/YYYY') NOT NULL,
   HASH_KEY_TXT         VARCHAR2(500)        NOT NULL,
   CREATE_ID            VARCHAR2(30)         DEFAULT USER NOT NULL,
   CREATE_TS            TIMESTAMP(6)         DEFAULT SYSDATE NOT NULL,
   UPDATE_ID            VARCHAR2(30),
   UPDATE_TS            TIMESTAMP(6),
   CONSTRAINT CASH_DIVIDEND_SCHEDULE_PK PRIMARY KEY (INSTRUMENT_SID, DIVIDEND_TYPE_CD, DIVIDEND_SUBTYPE_CD, CURRENCY_CD, EX_DIVIDEND_DT)
)
ROWDEPENDENCIES;

CREATE INDEX CASH_DIVIDEND_SCHEDULE_FK1 ON CASH_DIVIDEND_SCHEDULE (
   INSTRUMENT_SID ASC
);

CREATE INDEX CASH_DIVIDEND_SCHEDULE_IX1 ON CASH_DIVIDEND_SCHEDULE (
   EXPIRATION_DT ASC
);

CREATE TABLE INTEREST_RATE_SCHEDULE 
(
   INTEREST_RATE_SCHEDULE_SID INTEGER              NOT NULL,
   INSTRUMENT_SID       INTEGER              NOT NULL,
   INTEREST_RATE_TYPE_CD VARCHAR2(12)         NOT NULL,
   INTEREST_RT          NUMBER(38,3),
   INTEREST_RATE_EFF_DT DATE                 NOT NULL,
   EFFECTIVE_DT         DATE                 NOT NULL,
   EXPIRATION_DT        DATE                 DEFAULT TO_DATE('12/31/9999','MM/DD/YYYY') NOT NULL,
   HASH_KEY_TXT         VARCHAR2(500)        NOT NULL,
   CREATE_ID            VARCHAR2(30)         DEFAULT USER NOT NULL,
   CREATE_TS            TIMESTAMP(6)         DEFAULT SYSDATE NOT NULL,
   UPDATE_ID            VARCHAR2(30),
   UPDATE_TS            TIMESTAMP(6),
   CONSTRAINT INTEREST_RATE_SCHEDULE_PK PRIMARY KEY (INTEREST_RATE_SCHEDULE_SID),
   CONSTRAINT INTEREST_RATE_SCHEDULE_AK UNIQUE (INSTRUMENT_SID, INTEREST_RATE_TYPE_CD, INTEREST_RATE_EFF_DT)
);

CREATE INDEX INTEREST_RATE_SCHEDULE_FK1 ON INTEREST_RATE_SCHEDULE (
   INSTRUMENT_SID ASC
);

CREATE INDEX INTEREST_RATE_SCHEDULE_IX1 ON INTEREST_RATE_SCHEDULE (
   EXPIRATION_DT ASC
);

CREATE TABLE PORTFOLIO_TAX_EXCLUSION 
(
   PORTFOLIO_TAX_EXCLUSION_SID INTEGER              NOT NULL,
   PORTFOLIO_SID        INTEGER              NOT NULL,
   PORTFOLIO_TAX_EXCL_LOC_CD VARCHAR2(12)         NOT NULL,
   EFFECTIVE_DT         DATE                 NOT NULL,
   EXPIRATION_DT        DATE                 DEFAULT TO_DATE('12/31/9999','MM/DD/YYYY') NOT NULL,
   HASH_KEY_TXT         VARCHAR2(500)        NOT NULL,
   CREATE_ID            VARCHAR2(30)         DEFAULT USER NOT NULL,
   CREATE_TS            TIMESTAMP(6)         DEFAULT SYSDATE NOT NULL,
   UPDATE_ID            VARCHAR2(30),
   UPDATE_TS            TIMESTAMP(6),
   CONSTRAINT PORTFOLIO_TAX_EXCLUSION_PK PRIMARY KEY (PORTFOLIO_TAX_EXCLUSION_SID),
   CONSTRAINT PORTFOLIO_TAX_EXCLUSION_AK UNIQUE (PORTFOLIO_SID, PORTFOLIO_TAX_EXCL_LOC_CD, EFFECTIVE_DT)
);

CREATE INDEX PORTFOLIO_TAX_EXCLUSION_FK1 ON PORTFOLIO_TAX_EXCLUSION (
   PORTFOLIO_SID ASC
);

CREATE INDEX PORTFOLIO_TAX_EXCLUSION_IX1 ON PORTFOLIO_TAX_EXCLUSION (
   EXPIRATION_DT ASC
);

CREATE TABLE PROCESSING_REQUEST_LOG 
(
   PROCESSING_REQUEST_LOG_SID INTEGER              NOT NULL,
   REQUESTOR_ID         VARCHAR2(30)         NOT NULL,
   REQUEST_START_TS     TIMESTAMP(6)         NOT NULL,
   REQUEST_END_TS       TIMESTAMP(6),
   TOTAL_TIME_IN_SECONDS_NBR NUMBER(38,9),
   REQUEST_TYPE_CD      VARCHAR2(30)         NOT NULL,
   UNIT_CNT             NUMBER(38,3),
   CREATE_ID            VARCHAR2(30)         DEFAULT USER NOT NULL,
   CREATE_TS            TIMESTAMP(6)         DEFAULT SYSDATE NOT NULL,
   UPDATE_ID            VARCHAR2(30),
   UPDATE_TS            TIMESTAMP(6),
   CONSTRAINT CALCULATION_REQUEST_PK PRIMARY KEY (PROCESSING_REQUEST_LOG_SID),
   CONSTRAINT CALCULATION_REQUEST_AK UNIQUE (REQUESTOR_ID, REQUEST_START_TS)
);

CREATE INDEX CALCULATION_REQUEST_FK1 ON PROCESSING_REQUEST_LOG (
   REQUEST_TYPE_CD ASC
);

CREATE TABLE PUT_SCHEDULE 
(
   PUT_SCHEDULE_SID     INTEGER              NOT NULL,
   INSTRUMENT_SID       INTEGER              NOT NULL,
   PUT_TERMS_SEQ_NBR    INTEGER              NOT NULL,
   PUT_DT               DATE                 NOT NULL,
   PUT_PRC              NUMBER(38,9),
   EFFECTIVE_DT         DATE                 NOT NULL,
   EXPIRATION_DT        DATE                 DEFAULT TO_DATE('12/31/9999','MM/DD/YYYY') NOT NULL,
   HASH_KEY_TXT         VARCHAR2(500)        NOT NULL,
   CREATE_ID            VARCHAR2(30)         DEFAULT USER NOT NULL,
   CREATE_TS            TIMESTAMP(6)         DEFAULT SYSDATE NOT NULL,
   UPDATE_ID            VARCHAR2(30),
   UPDATE_TS            TIMESTAMP(6),
   CONSTRAINT PUT_SCHEDULE_PK PRIMARY KEY (PUT_SCHEDULE_SID),
   CONSTRAINT PUT_SCHEDULE_AK UNIQUE (INSTRUMENT_SID, PUT_TERMS_SEQ_NBR, PUT_DT, EFFECTIVE_DT)
);

CREATE INDEX PUT_SCHEDULE_FK1 ON PUT_SCHEDULE (
   INSTRUMENT_SID ASC
);

CREATE INDEX PUT_SCHEDULE_IX1 ON PUT_SCHEDULE (
   EXPIRATION_DT ASC
);

CREATE TABLE SHARE_CLASS 
(
   SHARE_CLASS_SID      INTEGER              NOT NULL,
   PORTFOLIO_SID        INTEGER              NOT NULL,
   TRANSFER_AGENT_SHARE_CLASS_ID VARCHAR2(20)         NOT NULL,
   ACCOUNTING_SHARE_CLASS_ID VARCHAR2(20),
   FIRS_SHARE_CLASS_ID  VARCHAR2(20),
   TAAC_SHARE_CLASS_ID  VARCHAR2(20),
   SHARE_CLASS_NM       VARCHAR2(50),
   NASDAQ_SHARE_CLASS_ID VARCHAR2(30),
   EFFECTIVE_DT         DATE                 NOT NULL,
   EXPIRATION_DT        DATE                 DEFAULT TO_DATE('12/31/9999','MM/DD/YYYY') NOT NULL,
   HASH_KEY_TXT         VARCHAR2(500)        NOT NULL,
   SHARE_CLASS_CUSIP2   VARCHAR(9),
   SHARE_CLASS_CUSIP1   VARCHAR(9),
   FDR_SHARE_CLASS_PRIMARY_CUSIP VARCHAR(9),
   FDR_SEC_CLASS_PORTF_EXP_TOT_AM NUMBER(38,9),
   CREATE_ID            VARCHAR2(30)         DEFAULT USER NOT NULL,
   CREATE_TS            TIMESTAMP(6)         DEFAULT SYSDATE NOT NULL,
   UPDATE_ID            VARCHAR2(30),
   UPDATE_TS            TIMESTAMP(6),
   CONSTRAINT SHARE_CLASS_PK PRIMARY KEY (SHARE_CLASS_SID),
   CONSTRAINT SHARE_CLASS_AK UNIQUE (TRANSFER_AGENT_SHARE_CLASS_ID, PORTFOLIO_SID, EFFECTIVE_DT)
);

CREATE TABLE TOLERANCE 
(
   TOLERANCE_SID        INTEGER              NOT NULL,
   TOLERANCE_TYPE_CD    VARCHAR2(20)         NOT NULL,
   TOLERANCE_TYPE_DSC   VARCHAR2(255),
   EVENT_CD             VARCHAR2(20)         NOT NULL,
   TOLERANCE_THRESHOLD_VAL NUMBER(38,9),
   EFFECTIVE_DT         DATE                 NOT NULL,
   EXPIRATION_DT        DATE                 DEFAULT TO_DATE('12/31/9999','MM/DD/YYYY') NOT NULL,
   HASH_KEY_TXT         VARCHAR2(500)        NOT NULL,
   CREATE_ID            VARCHAR2(30)         DEFAULT USER NOT NULL,
   CREATE_TS            TIMESTAMP(6)         DEFAULT SYSDATE NOT NULL,
   UPDATE_ID            VARCHAR2(30),
   UPDATE_TS            TIMESTAMP(6),
   CONSTRAINT PK_TOLERANCE PRIMARY KEY (TOLERANCE_SID),
   CONSTRAINT TOLERANCE_AK UNIQUE (TOLERANCE_TYPE_CD, EFFECTIVE_DT)
);

CREATE INDEX TOLERANCE_FK1 ON TOLERANCE (
   EVENT_CD ASC
);

CREATE TABLE TRADABLE_ENTITY 
(
   TRADABLE_ENTITY_SID  INTEGER              NOT NULL,
   TRADABLE_ENTITY_ID   NUMBER(20,0)         NOT NULL,
   INSTRUMENT_SID       INTEGER              NOT NULL,
   MARKET_EXCHANGE_CD   VARCHAR2(12),
   TRADABLE_ENTITY_INTERNAL_ID VARCHAR2(30),
   EFFECTIVE_DT         DATE                 NOT NULL,
   EXPIRATION_DT        DATE                 DEFAULT TO_DATE('12/31/9999','MM/DD/YYYY') NOT NULL,
   HASH_KEY_TXT         VARCHAR2(500)        NOT NULL,
   CREATE_ID            VARCHAR2(30)         DEFAULT USER NOT NULL,
   CREATE_TS            TIMESTAMP(6)         DEFAULT SYSDATE NOT NULL,
   UPDATE_ID            VARCHAR2(30),
   UPDATE_TS            TIMESTAMP(6),
   CONSTRAINT TRADABLE_ENTITY_PK PRIMARY KEY (TRADABLE_ENTITY_SID),
   CONSTRAINT TRADABLE_ENTITY_AK UNIQUE (INSTRUMENT_SID, TRADABLE_ENTITY_ID, EFFECTIVE_DT)
);

CREATE INDEX TRADABLE_ENTITY_FK1 ON TRADABLE_ENTITY (
   INSTRUMENT_SID ASC
);

CREATE INDEX TRADABLE_ENTITY_IX1 ON TRADABLE_ENTITY (
   EXPIRATION_DT ASC
);

CREATE INDEX TRADABLE_ENTITY_IX2 ON TRADABLE_ENTITY (
   TRADABLE_ENTITY_INTERNAL_ID ASC
);

CREATE TABLE UNDERLYING_INSTRUMENT_LINK 
(
   UNDERLYING_INSTRUMENT_LINK_SID INTEGER              NOT NULL,
   OVERLAYING_INSTRUMENT_SID INTEGER              NOT NULL,
   UNDERLYING_INSTRUMENT_SID INTEGER              NOT NULL,
   EXPIRATION_OR_CONVER_END_DT DATE                 NOT NULL,
   CONVER_FCTR          NUMBER(38,9),
   EFFECTIVE_DT         DATE                 NOT NULL,
   EXPIRATION_DT        DATE                 DEFAULT TO_DATE('12/31/9999','MM/DD/YYYY') NOT NULL,
   HASH_KEY_TXT         VARCHAR2(500)        NOT NULL,
   CREATE_ID            VARCHAR2(30)         DEFAULT USER NOT NULL,
   CREATE_TS            TIMESTAMP(6)         DEFAULT SYSDATE NOT NULL,
   UPDATE_ID            VARCHAR2(30),
   UPDATE_TS            TIMESTAMP(6),
   CONSTRAINT UNDERLYING_INSTRUMENT_LINK_PK PRIMARY KEY (UNDERLYING_INSTRUMENT_LINK_SID),
   CONSTRAINT UNDERLYING_INSTRUMENT_LINK_AK UNIQUE (OVERLAYING_INSTRUMENT_SID, UNDERLYING_INSTRUMENT_SID, EXPIRATION_OR_CONVER_END_DT)
);

CREATE INDEX UNDERLYING_INSTRUMENT_LINK_FK1 ON UNDERLYING_INSTRUMENT_LINK (
   OVERLAYING_INSTRUMENT_SID ASC
);

CREATE INDEX UNDERLYING_INSTRUMENT_LINK_FK2 ON UNDERLYING_INSTRUMENT_LINK (
   UNDERLYING_INSTRUMENT_SID ASC
);

CREATE INDEX UNDERLYING_INSTRUMENT_LINK_IX1 ON UNDERLYING_INSTRUMENT_LINK (
   EXPIRATION_DT ASC
);

ALTER TABLE APPLICATION_USER_ROLE
   ADD CONSTRAINT APPLICATION_USER_FOLE_FK1 FOREIGN KEY (APPLICATION_USER_ID)
      REFERENCES APPLICATION_USER (APPLICATION_USER_ID);

ALTER TABLE APPLICATION_USER_ROLE
   ADD CONSTRAINT APPLICATION_USER_FOLE_FK2 FOREIGN KEY (APPLICATION_USER_ROLE_CD)
      REFERENCES USER_ROLE (APPLICATION_USER_ROLE_CD);

ALTER TABLE CALL_SCHEDULE
   ADD CONSTRAINT CALL_SCHEDULE_FK1 FOREIGN KEY (INSTRUMENT_SID)
      REFERENCES INSTRUMENT (INSTRUMENT_SID);

ALTER TABLE CASH_DIVIDEND_SCHEDULE
   ADD CONSTRAINT CASH_DIVIDEND_SCHEDULE_FK1 FOREIGN KEY (INSTRUMENT_SID)
      REFERENCES INSTRUMENT (INSTRUMENT_SID);

ALTER TABLE INTEREST_RATE_SCHEDULE
   ADD CONSTRAINT INTEREST_RATE_SCHEDULE_FK1 FOREIGN KEY (INSTRUMENT_SID)
      REFERENCES INSTRUMENT (INSTRUMENT_SID);

ALTER TABLE PORTFOLIO_TAX_EXCLUSION
   ADD CONSTRAINT PORTFOLIO_TAX_EXCLUSION_FK1 FOREIGN KEY (PORTFOLIO_SID)
      REFERENCES PORTFOLIO (PORTFOLIO_SID);

ALTER TABLE PROCESSING_REQUEST_LOG
   ADD CONSTRAINT PROCESSING_REQUEST_FK1 FOREIGN KEY (REQUEST_TYPE_CD)
      REFERENCES PROCESSING_REQUEST_TYPE (REQUEST_TYPE_CD);

ALTER TABLE PUT_SCHEDULE
   ADD CONSTRAINT PUT_SCHEDULE_FK1 FOREIGN KEY (INSTRUMENT_SID)
      REFERENCES INSTRUMENT (INSTRUMENT_SID);

ALTER TABLE SHARE_CLASS
   ADD CONSTRAINT SHARE_CLASS_FK1 FOREIGN KEY (PORTFOLIO_SID)
      REFERENCES PORTFOLIO (PORTFOLIO_SID);

ALTER TABLE TOLERANCE
   ADD CONSTRAINT TOLERANCE_FK1 FOREIGN KEY (EVENT_CD)
      REFERENCES PROCESSING_EVENT (EVENT_CD);

ALTER TABLE TRADABLE_ENTITY
   ADD CONSTRAINT TRADABLE_ENTITY_FK1 FOREIGN KEY (INSTRUMENT_SID)
      REFERENCES INSTRUMENT (INSTRUMENT_SID);

ALTER TABLE UNDERLYING_INSTRUMENT_LINK
   ADD CONSTRAINT UNDERLYING_INSTRUMENT_LINK_FK1 FOREIGN KEY (OVERLAYING_INSTRUMENT_SID)
      REFERENCES INSTRUMENT (INSTRUMENT_SID);

ALTER TABLE UNDERLYING_INSTRUMENT_LINK
   ADD CONSTRAINT UNDERLYING_INSTRUMENT_LINK_FK2 FOREIGN KEY (UNDERLYING_INSTRUMENT_SID)
      REFERENCES INSTRUMENT (INSTRUMENT_SID);
      
CREATE TABLE PORTFOLIO_GL_BAL_SNAPSHOT 
(
   PORTFOLIO_GL_BALANCE_SID INTEGER              NOT NULL,
   REPORTING_DT         DATE                 NOT NULL,
   GL_ACCOUNT_SID       INTEGER              NOT NULL,
   PORTFOLIO_SID        INTEGER              NOT NULL,
   HOLDING_VIEW_CD      VARCHAR2(10)         NOT NULL,
   HOLDING_BUSINESS_GROUP_VIEW_CD VARCHAR2(10)         NOT NULL,
   GL_DEBIT_AMT         NUMBER(38,9),
   GL_CREDIT_AMT        NUMBER(38,9),
   FDR_GL_TOTAL_AMT     NUMBER(38,9),
   CREATE_ID            VARCHAR2(30)         DEFAULT USER NOT NULL,
   CREATE_TS            TIMESTAMP(6)         DEFAULT SYSDATE NOT NULL,
   UPDATE_ID            VARCHAR2(30),
   UPDATE_TS            TIMESTAMP(6),
   CONSTRAINT PORTFOLIO_GL_BAL_SNAPSHOT_PK PRIMARY KEY (PORTFOLIO_GL_BALANCE_SID),
   CONSTRAINT PORTFOLIO_GL_BAL_SNAPSHOT_AK UNIQUE (REPORTING_DT, GL_ACCOUNT_SID, HOLDING_VIEW_CD, HOLDING_BUSINESS_GROUP_VIEW_CD)
);

CREATE TABLE PORTFOLIO_HOLDING_SNAPSHOT 
(
   PORTFOLIO_HOLDING_SNAPSHOT_SID INTEGER              NOT NULL,
   REPORTING_DT         DATE                 NOT NULL,
   TRADABLE_ENTITY_SID  INTEGER              NOT NULL,
   PORTFOLIO_SID        INTEGER              NOT NULL,
   HOLDING_BUSINESS_GROUP_VIEW_CD VARCHAR2(12)         NOT NULL,
   HOLDING_VIEW_CD      VARCHAR2(12)         NOT NULL,
   POSITION_CD          VARCHAR2(12)         NOT NULL,
   TRADABLE_ENTITY_ID   NUMBER(20,0)         NOT NULL,
   ACCRUED_INCOME_AMT   NUMBER(38,9),
   EARNED_AMORT_BASE_AMT NUMBER(38,9),
   EARNED_INFL_CMPS_BASE_AMT NUMBER(38,9),
   MARKET_VALUE_BASE_AMT NUMBER(38,9),
   INFLATION_ADJ_SHARE_CNT NUMBER(38,9),
   SETTLE_SHARE_CNT     NUMBER(38,9),
   ORIGINAL_FACE_SHARE_QTY NUMBER(38,9),
   FX_RT                NUMBER(38,9),
   DER_SEC_YIELD_1_DAY_INCOME_AMT NUMBER(38,9),
   ADJ_DER_SEC_YIELD_1DAY_INC_AMT NUMBER(38,9),
   ADJ_DER_MARKET_VALUE_BASE_AMT NUMBER(38,9),
   ADJ_SETTLE_SHARE_CNT NUMBER(38,9),
   ADJ_ACCRUED_INCOME_AMT NUMBER(38,9),
   ADJ_EARNED_AMORT_BASE_AMT NUMBER(38,9),
   ADJ_EARNED_INFL_CMPS_BASE_AMT NUMBER(38,9),
   ADJ_COMMENTS_TXT     VARCHAR2(1000),
   LAST_ADJ_USER_ID     VARCHAR2(30)         NOT NULL,
   LAST_ADJ_TS          TIMESTAMP(6)         DEFAULT SYSDATE NOT NULL,
   LAST_ADJ_APPROVAL_STATUS_CD VARCHAR2(20),
   LAST_ADJ_APPROVER_USER_ID VARCHAR2(30)         NOT NULL,
   LAST_ADJ_APPROVAL_TS TIMESTAMP(6),
   CREATE_ID            VARCHAR2(30)         DEFAULT USER NOT NULL,
   CREATE_TS            TIMESTAMP(6)         DEFAULT SYSDATE NOT NULL,
   UPDATE_ID            VARCHAR2(30),
   UPDATE_TS            TIMESTAMP(6),
   CONSTRAINT PORTFOLIO_HOLDING_PK PRIMARY KEY (PORTFOLIO_HOLDING_SNAPSHOT_SID),
   CONSTRAINT PORTFOLIO_HOLDING_AK UNIQUE (REPORTING_DT, PORTFOLIO_SID, TRADABLE_ENTITY_SID, HOLDING_BUSINESS_GROUP_VIEW_CD, HOLDING_VIEW_CD, POSITION_CD)
);

CREATE TABLE PORTFOLIO_SNAPSHOT 
(
   PORTFOLIO_SNAPSHOT_SID INTEGER              NOT NULL,
   REPORTING_DT         DATE                 NOT NULL,
   DER_PORTFOLIO_TIER_NBR INTEGER,
   PORTFOLIO_SID        INTEGER              NOT NULL,
   FDR_SEC_EXPENSE_AMT  NUMBER(38,2),
   FDR_SEC_TOTAL_INCOME_AMT NUMBER(38,2),
   DER_SEC_1_DAY_YIELD_PCT NUMBER(38,2),
   DER_SEC_30_DAY_YIELD_PCT NUMBER(38,2),
   DER_SEC_RESTATED_YIELD_PCT NUMBER(38,2),
   FDR_SEC_MIL_ADJ_PCT  NUMBER(38,9),
   FDR_N1A_TOT_GROS_INC_UNMOD_AMT NUMBER(38,2),
   FDR_N1A_OOSP_DIST_INCOME_AMT NUMBER(38,2),
   FDR_N1A_OOSP_DIST_AMORT_AMT NUMBER(38,2),
   FDR_N1A_NET_OOSP_DIST_INC_AMT NUMBER(38,2),
   FDR_N1A_OOSP_GROS_DIST_INC_PCT NUMBER(38,3),
   FDR_PORTFOLIO_STATE_TAX_RT NUMBER(38,3),
   ADJ_DER_SEC_1_DAY_YIELD_PCT NUMBER(38,2),
   ADJ_DER_SEC_30_DAY_YIELD_PCT NUMBER(38,2),
   DER_SEC_YIELD_PME_CHG_PCT NUMBER(38,3),
   DER_RST_SEC_YIELD_PME_CHG_PCT NUMBER(38,3),
   DER_MM_7_DAY_YLD_PME_CHG_PCT NUMBER(38,3),
   DER_MM_30_DAY_YLD_PME_CHG_PCT NUMBER(38,3),
   DER_MM_GROSS_YIELD_DOD_CHG_PCT NUMBER(38,3),
   DER_MM_RST_7D_YLD_DOD_CHG_PCT NUMBER(38,3),
   DER_DIST_1D_YLD_C2C_CMPR_PCT NUMBER(38,3),
   DER_DIST_30D_YLD_C2C_CMPR_PCT NUMBER(38,3),
   DER_DIST_1_DAY_YLD_PME_CHG_PCT NUMBER(38,3),
   DER_DIST_30D_YLD_CHG_PME_PCT NUMBER(38,3),
   DER_DIST_12MO_YLD_CHG_PME_PCT NUMBER(38,3),
   MM_1DAY_GROSS_YIELD_PCT NUMBER(38,3),
   MM_1DAY_DIST_YIELD_PCT NUMBER(38,3),
   MM_N1A_STATE_TAX_RT  NUMBER(38,3),
   FDR_DISTRIBUTABLE_CAPSTOCK_QTY NUMBER(38,9),
   DER_SEC_1_DAY_MIL_RT NUMBER(38,9),
   DER_SEC_30_DAY_MIL_RT NUMBER(38,9),
   ADJ_TO_SEC_YIELD_PCT NUMBER(38,3),
   FDR_FUND_SECLENDING_INC_AMT NUMBER(38,2),
   FDR_SEC_TOT_EXP_POOLED_UP_AMT NUMBER(38,2),
   CREATE_ID            VARCHAR2(30)         DEFAULT USER NOT NULL,
   CREATE_TS            TIMESTAMP(6)         DEFAULT SYSDATE NOT NULL,
   UPDATE_ID            VARCHAR2(30),
   UPDATE_TS            TIMESTAMP(6),
   CONSTRAINT PORTFOLIO_FINANCIALS_PK PRIMARY KEY (PORTFOLIO_SNAPSHOT_SID),
   CONSTRAINT PORTFOLIO_FINANCIALS_AK UNIQUE (REPORTING_DT, PORTFOLIO_SID)
);

CREATE TABLE SHARE_CLASS_GL_BAL_SNAPSHOT 
(
   SHARE_CLASS_GL_BALANCE_SID INTEGER              NOT NULL,
   REPORTING_DT         DATE                 NOT NULL,
   GL_ACCOUNT_SID       INTEGER              NOT NULL,
   HOLDING_VIEW_CD      VARCHAR2(10)         NOT NULL,
   HOLDING_BUSINESS_GROUP_VIEW_CD VARCHAR2(10)         NOT NULL,
   PORTFOLIO_SID        INTEGER              NOT NULL,
   SHARE_CLASS_SID      INTEGER              NOT NULL,
   GL_DEBIT_AMT         NUMBER(38,9),
   GL_CREDIT_AMT        NUMBER(38,9),
   FDR_GL_TOTAL_AMT     NUMBER(38,9),
   CREATE_ID            VARCHAR2(30)         DEFAULT USER NOT NULL,
   CREATE_TS            TIMESTAMP(6)         DEFAULT SYSDATE NOT NULL,
   UPDATE_ID            VARCHAR2(30),
   UPDATE_TS            TIMESTAMP(6),
   CONSTRAINT SHARE_CLASS_GL_BAL_SNAPSHOT_PK PRIMARY KEY (SHARE_CLASS_GL_BALANCE_SID),
   CONSTRAINT SHARE_CLASS_GL_BAL_SNAPSHOT_AK UNIQUE (REPORTING_DT, GL_ACCOUNT_SID, HOLDING_VIEW_CD, HOLDING_BUSINESS_GROUP_VIEW_CD, SHARE_CLASS_SID, PORTFOLIO_SID)
);

CREATE TABLE SHARE_CLASS_SNAPSHOT 
(
   SHARE_CLASS_SNAPSHOT_SID INTEGER              NOT NULL,
   REPORTING_DT         DATE                 NOT NULL,
   SHARE_CLASS_SID      INTEGER              NOT NULL,
   CALENDAR_DT          DATE,
   MM_1_DAY_MIL_RT      NUMBER(38,3),
   DER_MM_RESTATED_MIL_RT NUMBER(38,3),
   DIST_YIELD_MIL_RT    NUMBER(38,9),
   FDR_SEC_EXPENSE_AMT  NUMBER(38,2),
   MM_1_DAY_YIELD_PCT   NUMBER(38,3),
   DER_MM_7_DAY_YIELD_PCT NUMBER(38,3),
   DER_MM_30_DAY_YIELD_PCT NUMBER(38,3),
   DER_MM_COMPOUND_7D_YIELD_PCT NUMBER(38,3),
   DER_MM_1_DAY_N1A_YIELD_PCT NUMBER(38,3),
   DER_MM_7_DAY_N1A_YIELD_PCT NUMBER(38,3),
   DER_MM_N1A_30_DAY_YIELD_PCT NUMBER(38,3),
   N1A_DIST_REIMBURSEMENT_AMT NUMBER(38,2),
   DER_MM_RST_7_DAY_YIELD_PCT NUMBER(38,3),
   DER_MM_RST_30_DAY_YIELD_PCT NUMBER(38,3),
   DER_N1A_DIST_INCOME_AMT NUMBER(38,2),
   DER_N1A_DAILY_MIL_RT NUMBER(38,2),
   N1A_DIST_INCOME_UNMOD_AMT NUMBER(38,2),
   N1A_DIST_INCOME_ADJ_AMT NUMBER(38,2),
   N1A_DIST_INCOME_BREAKAGE_AMT NUMBER(38,2),
   N1A_DIST_INCOME_ADJ_REV_AMT NUMBER(38,2),
   DIST_1_DAY_YIELD_PCT NUMBER(38,3),
   DIST_30_DAY_YIELD_PCT NUMBER(38,3),
   NAV_AMT              NUMBER(38,9),
   DER_SEC_1_DAY_YIELD_PCT NUMBER(38,3),
   DER_SEC_30_DAY_YIELD_PCT NUMBER(38,3),
   DER_SEC_RESTATED_YIELD_PCT NUMBER(38,3),
   DISTRIBUTABLE_CAPSTOCK_QTY NUMBER(38,9),
   N1A_GROSS_INCOME_UNMOD_AMT NUMBER(38,2),
   N1A_REIMBURSEMENT_EARNED_AMT NUMBER(38,2),
   N1A_WAIVER_EARNED_AMT NUMBER(38,2),
   FDR_N1A_TAX_AMT      NUMBER(38,2),
   FDR_N1A_GROSS_DIST_INCOME_AMT NUMBER(38,2),
   ADJ_EXCL_SHARE_CLASS_CALC_IND VARCHAR2(1)         
      CONSTRAINT CKC_ADJ_EXCL_SHARE_CL_SHARE_CL CHECK (ADJ_EXCL_SHARE_CLASS_CALC_IND IS NULL OR (ADJ_EXCL_SHARE_CLASS_CALC_IND IN ('Y','N'))),
   DER_N1A_DAILY_YIELD_PCT NUMBER(38,3),
   DER_SEC_YIELD_PME_CHG_PCT NUMBER(38,3),
   DER_MM_1D_DIST_YLD_DOD_CHG_PCT NUMBER(38,3),
   DER_MM_7D_DIST_YLD_DOD_CHG_PCT NUMBER(38,3),
   DER_MM_1D_N1A_YLD_DOD_CHG_PCT NUMBER(38,3),
   DER_MM_7D_N1A_YLD_DOD_CHG_PCT NUMBER(38,3),
   DER_DIST_12_MO_YIELD_PCT NUMBER(38,3),
   DER_DIST_30_DAY_YIELD_PCT NUMBER(38,3),
   DER_MM_RESTATE_1_DAY_YIELD_PCT NUMBER(38,3),
   DER_MM_N1A_COMPOUND_7DAY_YIELD NUMBER(38,3),
   SEC_REIMBURSEMENT_EARNED_AMT NUMBER(38,2),
   DIST_UNMOD_30_DAY_YIELD_PCT NUMBER(38,3),
   ADJ_TO_MIL_RT        NUMBER(38,9),
   ADJ_DIST_MIL_SPIKE_RT NUMBER(38,9),
   ADJ_DIST_MIL_SPIKE_DT DATE,
   DIST_12_MO_MIL_RT    NUMBER(38,9),
   FDR_SEC_PORT_CLASS_EXP_TOT_AMT NUMBER(38,9),
   CREATE_ID            VARCHAR2(30)         DEFAULT USER NOT NULL,
   CREATE_TS            TIMESTAMP(6)         DEFAULT SYSDATE NOT NULL,
   UPDATE_ID            VARCHAR2(30),
   UPDATE_TS            TIMESTAMP(6),
   CONSTRAINT SHARE_CLASS_SNAPSHOT_PK PRIMARY KEY (SHARE_CLASS_SNAPSHOT_SID),
   CONSTRAINT SHARE_CLASS_SNAPSHOT_AK UNIQUE (REPORTING_DT, SHARE_CLASS_SID)
);

CREATE TABLE TRADABLE_ENTITY_SNAPSHOT 
(
   TRADABLE_ENTITY_SNAPSHOT_SID INTEGER              NOT NULL,
   REPORTING_DT         DATE                 NOT NULL,
   TRADABLE_ENTITY_SID  INTEGER              NOT NULL,
   DER_YIELD_CALC_ENGINE_CD VARCHAR2(20),
   DER_INCOME_CALC_ENGINE_CD VARCHAR2(20),
   DER_REDEMPTION_PRC   NUMBER(38,9),
   DER_REDEMPTION_DT    DATE,
   FDR_REVISED_ISSUE_PRC NUMBER(38,9),
   CURRENT_FCTR         NUMBER(38,9),
   WAL_YEAR_VAL         NUMBER(38,9),
   MARKET_PRC           NUMBER(38,9),
   CURRENT_INCOME_RT    NUMBER(38,9),
   CURRENT_COUPON_ELECTION_CD VARCHAR2(12),
   RETURN_ON_CAPITAL_RT NUMBER(38,3),
   FDR_TIPS_INFLATIONARY_RATIO_RT NUMBER(38,3),
   FDR_CLEAN_PRC        NUMBER(38,9),
   FDR_ANNUALIZED_DIVIDEND_RT NUMBER(38,3),
   N1A_OOSP_DIST_INCOME_AMT NUMBER(38,2),
   N1A_OOSP_DIST_AMORT_AMT NUMBER(38,2),
   FDR_TRUE_CURRENT_FCTR NUMBER(38,9),
   FDR_PRV_TRUE_CURRENT_FCTR NUMBER(38,9),
   FDR_PAYDOWN_IND      VARCHAR2(1)         
      CONSTRAINT CKC_FDR_PAYDOWN_IND_TRADABLE CHECK (FDR_PAYDOWN_IND IS NULL OR (FDR_PAYDOWN_IND IN ('Y','N'))),
   FDR_CONVER_PARITY_PRC NUMBER(38,9),
   DER_SEC_1_DAY_YIELD_RT NUMBER(38,3),
   ADJ_DER_SEC_1_DAY_YIELD_RT NUMBER(38,3),
   DER_SEC_YLD_DOD_CHG_PCT NUMBER(38,3),
   DER_SEC_YLD_INC_DOD_CHG_PCT NUMBER(38,3),
   ADJ_REDEMPTION_PRC   NUMBER(38,9),
   ADJ_MARKET_PRC       NUMBER(38,9),
   LAST_ADJ_USER_ID     VARCHAR2(30)         NOT NULL,
   LAST_ADJ_TS          TIMESTAMP(6)         DEFAULT SYSDATE NOT NULL,
   LAST_ADJ_APPROVAL_STATUS_CD VARCHAR2(20),
   LAST_ADJ_APPROVER_USER_ID VARCHAR2(30)         NOT NULL,
   LAST_ADJ_APPROVAL_TS TIMESTAMP(6),
   FDR_WAL_MATURITY_DT  DATE,
   CREATE_ID            VARCHAR2(30)         DEFAULT USER NOT NULL,
   CREATE_TS            TIMESTAMP(6)         DEFAULT SYSDATE NOT NULL,
   UPDATE_ID            VARCHAR2(30),
   UPDATE_TS            TIMESTAMP(6),
   CONSTRAINT TRADABLE_ENTITY_FINANCIALS_PK PRIMARY KEY (TRADABLE_ENTITY_SNAPSHOT_SID),
   CONSTRAINT TRADABLE_ENTITY_FINANCIALS_AK UNIQUE (REPORTING_DT, TRADABLE_ENTITY_SID)
);

ALTER TABLE PORTFOLIO_GL_BAL_SNAPSHOT
   ADD CONSTRAINT PORTFOLIO_GL_BAL_SNP_FK1 FOREIGN KEY (GL_ACCOUNT_SID)
      REFERENCES GENERAL_LEGDER_ACCOUNT (GL_ACCOUNT_SID);

ALTER TABLE PORTFOLIO_GL_BAL_SNAPSHOT
   ADD CONSTRAINT PORTFOLIO_GL_BAL_SNP_FK2 FOREIGN KEY (REPORTING_DT)
      REFERENCES CALENDAR_DATE (CALENDAR_DT);

ALTER TABLE PORTFOLIO_GL_BAL_SNAPSHOT
   ADD CONSTRAINT PORTFOLIO_GL_BAL_SNP_FK3 FOREIGN KEY (PORTFOLIO_SID)
      REFERENCES PORTFOLIO (PORTFOLIO_SID);

ALTER TABLE PORTFOLIO_HOLDING_SNAPSHOT
   ADD CONSTRAINT PORTFOLIO_HOLDING_SNP_FK1 FOREIGN KEY (PORTFOLIO_SID)
      REFERENCES PORTFOLIO (PORTFOLIO_SID);

ALTER TABLE PORTFOLIO_HOLDING_SNAPSHOT
   ADD CONSTRAINT PORTFOLIO_HOLDING_SNP_FK2 FOREIGN KEY (TRADABLE_ENTITY_SID)
      REFERENCES TRADABLE_ENTITY (TRADABLE_ENTITY_SID);

ALTER TABLE PORTFOLIO_HOLDING_SNAPSHOT
   ADD CONSTRAINT PORTFOLIO_HOLDING_SNP_FK3 FOREIGN KEY (LAST_ADJ_USER_ID)
      REFERENCES APPLICATION_USER (APPLICATION_USER_ID);

ALTER TABLE PORTFOLIO_HOLDING_SNAPSHOT
   ADD CONSTRAINT PORTFOLIO_HOLDING_SNP_FK4 FOREIGN KEY (LAST_ADJ_APPROVER_USER_ID)
      REFERENCES APPLICATION_USER (APPLICATION_USER_ID);

ALTER TABLE PORTFOLIO_HOLDING_SNAPSHOT
   ADD CONSTRAINT PORTFOLIO_HOLDING_SNP_FK5 FOREIGN KEY (REPORTING_DT)
      REFERENCES CALENDAR_DATE (CALENDAR_DT);

ALTER TABLE PORTFOLIO_SNAPSHOT
   ADD CONSTRAINT PORTFOLIO_SNAPSHOT_FK1 FOREIGN KEY (PORTFOLIO_SID)
      REFERENCES PORTFOLIO (PORTFOLIO_SID);

ALTER TABLE PORTFOLIO_SNAPSHOT
   ADD CONSTRAINT PORTFOLIO_SNAPSHOT_FK2 FOREIGN KEY (REPORTING_DT)
      REFERENCES CALENDAR_DATE (CALENDAR_DT);

ALTER TABLE SHARE_CLASS_GL_BAL_SNAPSHOT
   ADD CONSTRAINT SHARE_CLASS_GL_BAL_SNP_FK1 FOREIGN KEY (GL_ACCOUNT_SID)
      REFERENCES GENERAL_LEGDER_ACCOUNT (GL_ACCOUNT_SID);

ALTER TABLE SHARE_CLASS_GL_BAL_SNAPSHOT
   ADD CONSTRAINT SHARE_CLASS_GL_BAL_SNP_FK2 FOREIGN KEY (SHARE_CLASS_SID)
      REFERENCES SHARE_CLASS (SHARE_CLASS_SID);

ALTER TABLE SHARE_CLASS_GL_BAL_SNAPSHOT
   ADD CONSTRAINT SHARE_CLASS_GL_BAL_SNP_FK3 FOREIGN KEY (PORTFOLIO_SID)
      REFERENCES PORTFOLIO (PORTFOLIO_SID);

ALTER TABLE SHARE_CLASS_GL_BAL_SNAPSHOT
   ADD CONSTRAINT SHARE_CLASS_GL_BAL_SNP_FK4 FOREIGN KEY (REPORTING_DT)
      REFERENCES CALENDAR_DATE (CALENDAR_DT);

ALTER TABLE SHARE_CLASS_SNAPSHOT
   ADD CONSTRAINT SHARE_CLASS_SNAPSHOT_FK1 FOREIGN KEY (SHARE_CLASS_SID)
      REFERENCES SHARE_CLASS (SHARE_CLASS_SID);

ALTER TABLE SHARE_CLASS_SNAPSHOT
   ADD CONSTRAINT SHARE_CLASS_SNAPSHOT_FK2 FOREIGN KEY (REPORTING_DT)
      REFERENCES CALENDAR_DATE (CALENDAR_DT);

ALTER TABLE TRADABLE_ENTITY_SNAPSHOT
   ADD CONSTRAINT TRADABLE_ENTITY_SNP_FK1 FOREIGN KEY (TRADABLE_ENTITY_SID)
      REFERENCES TRADABLE_ENTITY (TRADABLE_ENTITY_SID);

ALTER TABLE TRADABLE_ENTITY_SNAPSHOT
   ADD CONSTRAINT TRADABLE_ENTITY_SNP_FK2 FOREIGN KEY (DER_INCOME_CALC_ENGINE_CD)
      REFERENCES CALCULATION_ENGINE (CALCULATION_ENGINE_CD);

ALTER TABLE TRADABLE_ENTITY_SNAPSHOT
   ADD CONSTRAINT TRADABLE_ENTITY_SNP_FK3 FOREIGN KEY (DER_YIELD_CALC_ENGINE_CD)
      REFERENCES CALCULATION_ENGINE (CALCULATION_ENGINE_CD);

ALTER TABLE TRADABLE_ENTITY_SNAPSHOT
   ADD CONSTRAINT TRADABLE_ENTITY_SNP_FK4 FOREIGN KEY (LAST_ADJ_USER_ID)
      REFERENCES APPLICATION_USER (APPLICATION_USER_ID);

ALTER TABLE TRADABLE_ENTITY_SNAPSHOT
   ADD CONSTRAINT TRADABLE_ENTITY_SNP_FK5 FOREIGN KEY (LAST_ADJ_APPROVER_USER_ID)
      REFERENCES APPLICATION_USER (APPLICATION_USER_ID);

ALTER TABLE TRADABLE_ENTITY_SNAPSHOT
   ADD CONSTRAINT TRADABLE_ENTITY_SNP_FK6 FOREIGN KEY (REPORTING_DT)
      REFERENCES CALENDAR_DATE (CALENDAR_DT);
      
CREATE INDEX PORTFOLIO_GL_BAL_SNP_FK1 ON PORTFOLIO_GL_BAL_SNAPSHOT (
   GL_ACCOUNT_SID ASC
);

CREATE INDEX PORTFOLIO_GL_BAL_SNP_FK2 ON PORTFOLIO_GL_BAL_SNAPSHOT (
   REPORTING_DT ASC
);

CREATE INDEX PORTFOLIO_GL_BAL_SNP_FK3 ON PORTFOLIO_GL_BAL_SNAPSHOT (
   PORTFOLIO_SID ASC
);

CREATE INDEX PORTFOLIO_HOLDING_SNAPSHOT_FK1 ON PORTFOLIO_HOLDING_SNAPSHOT (
   PORTFOLIO_SID ASC
);

CREATE INDEX PORTFOLIO_HOLDING_SNAPSHOT_FK2 ON PORTFOLIO_HOLDING_SNAPSHOT (
   TRADABLE_ENTITY_SID ASC
);

CREATE INDEX PORTFOLIO_HOLDING_SNAPSHOT_FK3 ON PORTFOLIO_HOLDING_SNAPSHOT (
   LAST_ADJ_USER_ID ASC
);

CREATE INDEX PORTFOLIO_HOLDING_SNAPSHOT_FK4 ON PORTFOLIO_HOLDING_SNAPSHOT (
   LAST_ADJ_APPROVER_USER_ID ASC
);

CREATE INDEX PORTFOLIO_SNAPSHOT_FK1 ON PORTFOLIO_SNAPSHOT (
   PORTFOLIO_SID ASC
);

CREATE INDEX SHARE_CLASS_GL_BAL_SNP_FK1 ON SHARE_CLASS_GL_BAL_SNAPSHOT (
   GL_ACCOUNT_SID ASC
);

CREATE INDEX SHARE_CLASS_GL_BAL_SNP_FK2 ON SHARE_CLASS_GL_BAL_SNAPSHOT (
   SHARE_CLASS_SID ASC
);

CREATE INDEX SHARE_CLASS_GL_BAL_SNP_FK3 ON SHARE_CLASS_GL_BAL_SNAPSHOT (
   PORTFOLIO_SID ASC
);

CREATE INDEX SHARE_CLASS_GL_BAL_SNP_FK4 ON SHARE_CLASS_GL_BAL_SNAPSHOT (
   REPORTING_DT ASC
);

CREATE INDEX SHARE_CLASS_SNAPSHOT_FK1 ON SHARE_CLASS_SNAPSHOT (
   SHARE_CLASS_SID ASC
);

CREATE INDEX TRADABLE_ENTITY_SNP_FK1 ON TRADABLE_ENTITY_SNAPSHOT (
   TRADABLE_ENTITY_SID ASC
);

CREATE INDEX TRADABLE_ENTITY_SNP_FK2 ON TRADABLE_ENTITY_SNAPSHOT (
   DER_INCOME_CALC_ENGINE_CD ASC
);

CREATE INDEX TRADABLE_ENTITY_SNP_FK3 ON TRADABLE_ENTITY_SNAPSHOT (
   DER_YIELD_CALC_ENGINE_CD ASC
);

CREATE INDEX TRADABLE_ENTITY_SNP_FK4 ON TRADABLE_ENTITY_SNAPSHOT (
   LAST_ADJ_USER_ID ASC
);

CREATE INDEX TRADABLE_ENTITY_SNP_FK5 ON TRADABLE_ENTITY_SNAPSHOT (
   LAST_ADJ_APPROVER_USER_ID ASC
);

CREATE TABLE PROCESSING_EVENT_LOG 
(
   EVENT_LOG_SID        INTEGER              NOT NULL,
   EVENT_LOG_USER_ID    VARCHAR2(30)         NOT NULL,
   EVENT_CD             VARCHAR2(20)         NOT NULL,
   PORTFOLIO_HOLDING_SNAPSHOT_SID INTEGER              NOT NULL,
   TRADABLE_ENTITY_SNAPSHOT_SID INTEGER              NOT NULL,
   EVENT_LOG_COMMENTS_TXT VARCHAR2(1000),
   EVENT_LOG_TS         TIMESTAMP,
   CREATE_ID            VARCHAR2(30)         DEFAULT USER NOT NULL,
   CREATE_TS            TIMESTAMP(6)         DEFAULT SYSDATE NOT NULL,
   UPDATE_ID            VARCHAR2(30),
   UPDATE_TS            TIMESTAMP(6),
   CONSTRAINT EVENT_LOG_PK PRIMARY KEY (EVENT_LOG_SID)
);

CREATE INDEX PROCESSING_EVENT_LOG_FK1 ON PROCESSING_EVENT_LOG (
   EVENT_CD ASC
);

CREATE INDEX PROCESSING_EVENT_LOG_FK2 ON PROCESSING_EVENT_LOG (
   EVENT_LOG_USER_ID ASC
);

CREATE TABLE WARNING_LOG 
(
   WARNING_LOG_SID      INTEGER              NOT NULL,
   EVENT_LOG_SID        INTEGER              NOT NULL,
   WARNING_CD           VARCHAR2(20)         NOT NULL,
   TOLERANCE_SID        INTEGER              NOT NULL,
   WARNING_APPROVAL_IND VARCHAR2(1)         
      CONSTRAINT CKC_WARNING_APPROVAL__WARNING_ CHECK (WARNING_APPROVAL_IND IS NULL OR (WARNING_APPROVAL_IND IN ('Y','N'))),
   WARNING_APPROVAL_COMMENTS_TXT VARCHAR2(1000),
   WARNING_APPROVAL_USER_ID VARCHAR2(30),
   WARNING_APPROVAL_TS  TIMESTAMP(6),
   CREATE_ID            VARCHAR2(30)         DEFAULT USER NOT NULL,
   CREATE_TS            TIMESTAMP(6)         DEFAULT SYSDATE NOT NULL,
   UPDATE_ID            VARCHAR2(30),
   UPDATE_TS            TIMESTAMP(6),
   CONSTRAINT WARNING_LOG_PK PRIMARY KEY (WARNING_LOG_SID)
);

ALTER TABLE PROCESSING_EVENT_LOG
   ADD CONSTRAINT EVENT_LOG_FK2 FOREIGN KEY (EVENT_LOG_USER_ID)
      REFERENCES APPLICATION_USER (APPLICATION_USER_ID);

ALTER TABLE PROCESSING_EVENT_LOG
   ADD CONSTRAINT PROCESSING_EVENT_LOG_FK1 FOREIGN KEY (PORTFOLIO_HOLDING_SNAPSHOT_SID)
      REFERENCES PORTFOLIO_HOLDING_SNAPSHOT (PORTFOLIO_HOLDING_SNAPSHOT_SID);

ALTER TABLE PROCESSING_EVENT_LOG
   ADD CONSTRAINT PROCESSING_EVENT_LOG_FK2 FOREIGN KEY (TRADABLE_ENTITY_SNAPSHOT_SID)
      REFERENCES TRADABLE_ENTITY_SNAPSHOT (TRADABLE_ENTITY_SNAPSHOT_SID);

ALTER TABLE PROCESSING_EVENT_LOG
   ADD CONSTRAINT EVENT_LOG_FK1 FOREIGN KEY (EVENT_CD)
      REFERENCES PROCESSING_EVENT (EVENT_CD);

ALTER TABLE WARNING_LOG
   ADD CONSTRAINT WARNING_LOG_FK1 FOREIGN KEY (EVENT_LOG_SID)
      REFERENCES PROCESSING_EVENT_LOG (EVENT_LOG_SID);

ALTER TABLE WARNING_LOG
   ADD CONSTRAINT WARNING_LOG_FK2 FOREIGN KEY (TOLERANCE_SID)
      REFERENCES TOLERANCE (TOLERANCE_SID);

ALTER TABLE WARNING_LOG
   ADD CONSTRAINT WARNING_LOG_FK4 FOREIGN KEY (WARNING_CD)
      REFERENCES WARNING (WARNING_CD);